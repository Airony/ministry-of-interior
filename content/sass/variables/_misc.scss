@use "./colors.scss"as *;
@use "sass:string";

$border-radius: 2px;
$transition-clr : color 200ms ease;

@mixin no-border-radius-right {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

@mixin no-border-radius-left {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

@mixin no-border-radius-top {
    border-top-right-radius: 0;
    border-top-left-radius: 0;
}

@mixin no-border-radius-bottom {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
}

@mixin shadow-400 {
    box-shadow:
        0px 2px 4px 0px hsla(0, 0%, 0%, 0.2),
        0px 1px 10px 0px hsla(0, 0%, 0%, 0.12),
        0px 4px 5px 0px hsla(0, 0%, 0%, 0.14);
}

@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin grid-center {
    display: grid;
    justify-content: center;
    align-items: center;
}

@mixin grid-preferred-columns($preferred-count, $min-size, $column-gap:0px, $row-gap:0px) {
    column-gap: $column-gap;
    row-gap: $row-gap;
    grid-template-columns: repeat(auto-fill,
            minmax(max(calc((100% - $column-gap * ($preferred-count - 1)) / $preferred-count),
                    $min-size), 1fr));
}

@function multiple-transitions($duration, $timing-func, $properties...) {
    $result: null;

    @for $i from 1 through length($properties) {
        $result: $result + nth($properties, $i) $duration $timing-func;

        @if($i !=length($properties)) {
            $result: $result + string.unquote(',');
        }
    }

    @return $result;
}

@mixin btn-expanded($new-selector : null) {
    &[aria-expanded="true"] {
        @if($new-selector) {
            #{$new-selector} {
                @content
            }
        }

        @else {
            @content;
        }
    }
}

@mixin menu-expanded() {
    &.menu--expanded {
        @content
    }
}

@mixin hover-opacity() {
    &:hover {
        opacity: 0.8;
    }
}

$border-light-200:rgba(255, 255, 255, 0.15);
$border-light-100:rgba(255, 255, 255, 0.1);

$border-dark-400:rgba(0, 0, 0, 0.2);